import ch.so.agi.gretl.tasks.*

apply plugin: 'ch.so.agi.gretl'

def GRETLTEST_DBURI = 'gretltest_dburi_pg'
def db_uri = findProperty(GRETLTEST_DBURI) != null ? findProperty(GRETLTEST_DBURI) : 'jdbc:postgresql://localhost:5432/gretl'

def db_user = "ddluser"
def db_pass = "ddluser"

defaultTasks 'validate'

tasks.register('schemaimport', Ili2pgImportSchema) {
    database = [db_uri, db_user, db_pass]
    models = "SO_AGI_AV_GB_Administrative_Einteilungen_20180613"
    defaultSrsCode = "2056"
    modeldir = rootProject.projectDir.toString() + ";http://models.interlis.ch"
    dbschema = "agi_av_gb_admin_einteilungen_ok"
}

tasks.register('importdata', Ili2pgImport) {
    dependsOn 'schemaimport'
    database = [db_uri, db_user, db_pass]
    models = "SO_AGI_AV_GB_Administrative_Einteilungen_20180613"
    modeldir = rootProject.projectDir.toString() + ";http://models.interlis.ch"
    dbschema = "agi_av_gb_admin_einteilungen_ok"
    disableValidation = true
    dataFile = files("ch.so.agi.av_gb_admin_einteilung_edit_ok.xtf")
}

tasks.register('validate', Ili2pgValidate) {
    dependsOn 'importdata'
    database = [db_uri, db_user, db_pass]
    models = "SO_AGI_AV_GB_Administrative_Einteilungen_20180613"
    modeldir = rootProject.projectDir.toString() + ";http://models.interlis.ch"
    dbschema = "agi_av_gb_admin_einteilungen_ok"
    logFile = file("fubar.log")
}

