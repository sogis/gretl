/**
 * SourceSets are only responsible for compiling source code,
 * but do not deal with executing the byte code (= the tests).
 * We need to create a 'functionalTest(type: Test)' task.
 */
sourceSets {
    integrationTest {
        java {
            srcDirs('src/integrationTest/java')
            resources.srcDirs('src/integrationTest/resources')
        }
        /**
         * Provides, at compile-time, the classes produced by the _main_ and _test_ SourceSets,
         * allowing the integration tests to access the production code in _main_ and allowing
         * them to reuse any unit test helper methods in _test_.
         */
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

/**
 * Task for executing the integration tests. It references the 
 * classes and runtime classpath of the integration test source set.
 */
tasks.register('jarTest', Test){
    description = 'Runs integration tests against the installed gretl jar.'
    group = LifecycleBasePlugin.VERIFICATION_GROUP

    useJUnit {
        excludeCategories 'ch.so.agi.gretl.testutil.QgisReachableTest'
        excludeCategories 'ch.so.agi.gretl.testutil.S3Test'
    }

    systemProperty('GRETL_TESTTYPE', 'jar')

    testLogging.showStandardStreams = true

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath += sourceSets.integrationTest.runtimeClasspath
    jvmArgs '-Xmx1g'
}

tasks.register('jarS3Test', Test){
    description = 'Runs the S3 integration tests against the installed gretl jar.'
    group = LifecycleBasePlugin.VERIFICATION_GROUP

    useJUnit {
        includeCategories 'ch.so.agi.gretl.testutil.S3Test'
    }

    systemProperty('GRETL_TESTTYPE', 'jar')

    testLogging.showStandardStreams = true

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath += sourceSets.integrationTest.runtimeClasspath
    jvmArgs '-Xmx1g'
}

tasks.register('imageTest', Test){
    description = 'Runs integration tests against the installed gretl docker image.'
    group = LifecycleBasePlugin.VERIFICATION_GROUP

    useJUnit {
        excludeCategories 'ch.so.agi.gretl.testutil.S3Test'
    }

    systemProperty('GRETL_TESTTYPE', 'image')

    testLogging.showStandardStreams = true

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath += sourceSets.integrationTest.runtimeClasspath
}

tasks.register('imageS3Test', Test){
    description = 'Runs S3 integration tests against the installed gretl docker image.'
    group = LifecycleBasePlugin.VERIFICATION_GROUP

    useJUnit {
        includeCategories 'ch.so.agi.gretl.testutil.S3Test'
    }

    systemProperty('GRETL_TESTTYPE', 'image')

    testLogging.showStandardStreams = true

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath += sourceSets.integrationTest.runtimeClasspath
}